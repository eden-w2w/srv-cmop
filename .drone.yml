kind: pipeline
type: docker
volumes:
- name: temp
  temp: {}
- name: host
  host:
    path: /var/run/docker.sock
steps:
- name: master_test
  image: registry.cn-hangzhou.aliyuncs.com/profzone/golang-onbuild:1.14
  pull: always
  commands:
  - eden ci run test
  environment:
    GOENV: PROD
  when:
    branch:
      include:
      - master
      exclude: []
  volumes:
  - name: temp
    path: /go
  - name: host
    path: /var/run/docker.sock
- name: master_build
  image: registry.cn-hangzhou.aliyuncs.com/profzone/golang-onbuild:1.14
  pull: always
  commands:
  - eden ci run build
  environment:
    GOENV: PROD
  when:
    branch:
      include:
      - master
      exclude: []
  volumes:
  - name: temp
    path: /go
  - name: host
    path: /var/run/docker.sock
- name: master_ship
  image: registry.cn-hangzhou.aliyuncs.com/profzone/golang-onship:1.14
  pull: always
  commands:
  - eden ci ship --push
  environment:
    GOENV: PROD
  when:
    branch:
      include:
      - master
      exclude: []
  volumes:
  - name: temp
    path: /go
  - name: host
    path: /var/run/docker.sock
- name: master_deploy
  image: registry.cn-hangzhou.aliyuncs.com/profzone/golang-ondeploy:2.4.3
  pull: always
  commands:
  - eden ci deploy --env=PROD
  environment:
    GOENV: PROD
  when:
    branch:
      include:
      - master
      exclude: []
  volumes:
  - name: temp
    path: /go
  - name: host
    path: /var/run/docker.sock
